#pragma once
#include "Value.h"
//#include "RegisterPlaceholder.h"
#include "ExecutionFlow.h"

namespace fuura::language
{
	//////////////////////////////////////////////////////////////////////////////
	//
	//	Вычислимый объект.
	//	В ходе синтаксического разбора любая функция раскладывается в дерево
	//	структур, реализующих данный интерфейс.
	//
	//////////////////////////////////////////////////////////////////////////////
	class ICalculatable
	{
	public:
		virtual ~ICalculatable() = default;

		// --------------------------------------------------------------------
		// Возвращает значение выражения.
		// --------------------------------------------------------------------
		virtual Value Calculate() const = 0;

		// --------------------------------------------------------------------
		// Возвращает тип выражения.
		// --------------------------------------------------------------------
		virtual ValueType GetType() const = 0;

		// --------------------------------------------------------------------
		// Используется при компиляции.
		// --------------------------------------------------------------------
		/*
		virtual compilation::IRegisterPlaceholder* GenerateFlow(compilation::ExecutionFlow& executionFlow, compilation::VirtualRegisterManager& tempValues) const
		{
			// TODO: заменить на чисто виртуальную функцию после реализации всеми подклассами.
			//throw std::exception("not implemented yet");
			return nullptr;
		}*/
	};

	//////////////////////////////////////////////////////////////////////////////
}