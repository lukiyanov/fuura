-------------------------------------------------------------------------------
TODO:
    I ---------------------------------------------------------------------
	+ Сложные многоступенчатые преобразования (нужны ли они вообще?):
		char -> int -> double -> long double
		+ скрыть реализацию как можно сильнее, чтобы разница между прямым
		и многоступенчатым преобразованием не чувствовалась.
		Фабрики многоступенчатых преобразований типов?
		Специализации для многоступенчатых преобразований более простым образом, если возможно.

	+ убрать ошибку линковки LNK4221

	+ Тесты на ошибочные листинги языка fuura, побольше
	+ Тест на то что Function нормально выполняются уже после удаления транслятора
-------------------------------------------------------------------------------

	Перегрузка:
		имя -> { реализации } // группируются по числу аргуметов

		1. Если функция с таким именем не найдена, генерируем исключение
		2. Отбираем реализации с совпадающим числом аргументов
		3. Если таких нет, генерируем исключение
		4. Среди них ищем точное совпадение аргументов
		5. Если нашли - возвращаем её
		6. Ищем реализацию, типы аргументов которой можно получить из имеющихся приведением аргументов
		7. Если таких несколько, генерируем исключение
		8. Если таких нет, генерируем исключение
		9. Возвращаем найденную реализацию

-------------------------------------------------------------------------------
Принятые в коде соглашения:
	Если функция возвращает нативный указатель, то он ВСЕГДА невладеющий.
-------------------------------------------------------------------------------